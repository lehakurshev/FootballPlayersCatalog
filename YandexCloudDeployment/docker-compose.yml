version: '3.8'

services:
  postgres:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: footballplayersdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - backend
    restart: unless-stopped

  dotnet-app-1:
    build:
      context: ../CatalogOfFootballPlayersBackend
      args:
        PORT: 5001
    ports:
      - "5001:5001"
    environment:
      - API_VERSION=v3
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=footballplayersdb
      - FRONTEND_HOST=http://localhost:3000
      - PORT=5001
    networks:
      - backend
    depends_on:
      - postgres

  dotnet-app-2:
    build:
      context: ../CatalogOfFootballPlayersBackend
      args:
        PORT: 5002
    ports:
      - "5002:5002"
    environment:
      - API_VERSION=v4
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=footballplayersdb
      - FRONTEND_HOST=http://localhost:3000
      - PORT=5002
    networks:
      - backend
    depends_on:
      - postgres

  nginx-balancer:
    build: 
      context: ../nginx-balancer
      args:
        PORT1: localhost:5001
        PORT2: localhost:5002
        HOST1: host.docker.internal:5001
        HOST2: host.docker.internal:5002
        BALANCE_PORT: 8080
    ports:
      - "8080:8080"
    networks:
      - backend
    depends_on:
      - dotnet-app-1
      - dotnet-app-2

  tsx-app:
    build:
      context: ../catalog-of-football-players-frontend
      args:
        REACT_APP_BACK_ADDRESS: http://localhost:8080
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
    networks:
      - backend
    depends_on:
      - nginx-balancer

volumes:
  postgres:

networks:
  backend:
    driver: bridge
